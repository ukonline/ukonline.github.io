import{_ as e,o as t,c as i,N as o}from"./chunks/framework.0e180df0.js";const _=JSON.parse('{"title":"Optimisation de code","description":"","frontmatter":{},"headers":[],"relativePath":"cours/python/optimisation/technique-d-optimisation/optimisation-de-code/index.md"}'),r={name:"cours/python/optimisation/technique-d-optimisation/optimisation-de-code/index.md"},a=o('<h1 id="optimisation-de-code" tabindex="-1">Optimisation de code <a class="header-anchor" href="#optimisation-de-code" aria-label="Permalink to &quot;Optimisation de code&quot;">​</a></h1><p>Une fois l&#39;interpréteur Python choisi, on peut s&#39;attaquer à l&#39;<em>optimisation du code</em>, à proprement parler. Il faut néanmoins faire attention lorsque l&#39;on s&#39;attelle à une telle activité. Il faut, en effet, n&#39;optimiser qu&#39;un code qui nécessite de l&#39;optimisation, au risque d&#39;empirer la situation. Comme l&#39;a dit Donald Knuth : <i>“Premature optimization is the root of all evil.”</i> Il ne faut dès lors pas commencer par optimiser son code tant que celui-ci ne fait pas ce qu&#39;il doit faire, et ce, correctement.</p><p>Une fois que l&#39;on s&#39;est assuré que le code fonctionne, avec des <em>tests unitaires</em>, par exemple, on peut l&#39;analyser pour évaluer s&#39;il est nécessaire d&#39;améliorer ses performances. On pourrait, par exemple, se rendre compte qu&#39;il est trop lent ou qu&#39;il consomme trop de mémoire. À ce moment, on peut alors envisager d&#39;entamer une optimisation de code.</p><p>Cette démarche d&#39;optimisation se résume en quatre étapes :</p><ol><li>Écrire un code correct, qui fait ce qu&#39;il doit faire.</li><li>Tester le code, pour s&#39;assurer qu&#39;il soit correct.</li><li>Profiler le code, pour évaluer s&#39;il est assez performant.</li><li>Optimiser le code.</li></ol><p>Une fois l&#39;étape 4 terminée, il est important de recommencer à l&#39;étape 2, pour s&#39;assurer que les optimisations n&#39;ont pas cassé le programme, le rendant incorrect. Pour résumer, comme l&#39;a dit Kent Beck : <i>“First make it work. Then make it right. Then make it fast.”</i></p>',6),s=[a];function n(c,l,p,m,d,u){return t(),i("div",null,s)}const h=e(r,[["render",n]]);export{_ as __pageData,h as default};
